/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package knjiznica_Galic_4e;

import java.sql.*;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import java.util.Date;
/**
 *
 * @author Galic
 */
public class Posudba extends javax.swing.JFrame {

    Connection conn;
    ResultSet rs;
    PreparedStatement pst;
    //flag za provjeriti koji se upit provodi
    private int flag = 0;
    
    
    //setter za flag
    public void setFlag(int flag){  
        this.flag = flag;    
    }
    
    //getter za flag
    public int getFlag(){ 
        return flag;
    }
    
    
    public Posudba() {
        initComponents();
        conn = JavaConnect.connectDB();   
        this.setLocationRelativeTo(null);
        this.setResizable(false);
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        podnaslov_Posudba_JLabel = new javax.swing.JLabel();
        naslov_Posudba_JLabel = new javax.swing.JLabel();
        podnaslovDrugi_Posudba_JLabel = new javax.swing.JLabel();
        ID_knjiga_Posudba_JLabel = new javax.swing.JLabel();
        ID_ucenik_Posudba_JLabel = new javax.swing.JLabel();
        trazi_ucenika_jButton = new javax.swing.JButton();
        trazi_knjiga_jButton = new javax.swing.JButton();
        ID_knjiga_Posudba_TextField = new javax.swing.JTextField();
        ID_ucenik_Posudba_TextField = new javax.swing.JTextField();
        ime_ucenik_Posudba_JLabel = new javax.swing.JLabel();
        prezime_ucenik_Posudba_JLabel = new javax.swing.JLabel();
        razred_ucenik_Posudba_JLabel = new javax.swing.JLabel();
        ime_ucenik_Posudba_TextField = new javax.swing.JTextField();
        prezime_ucenik_Posudba_TextField = new javax.swing.JTextField();
        razred_ucenik_Posudba_TextField = new javax.swing.JTextField();
        naziv_knjiga_Posudba_JLabel = new javax.swing.JLabel();
        autor_knjiga_Posudba_JLabel = new javax.swing.JLabel();
        godinaIzdanja_knjiga_Posudba_JLabel = new javax.swing.JLabel();
        brojStranica_knjiga_Posudba_JLabel = new javax.swing.JLabel();
        naziv_knjiga_Posudba_TextField = new javax.swing.JTextField();
        autor_knjiga_Posudba_TextField = new javax.swing.JTextField();
        godinaIzdanja_knjiga_Posudba_TextField = new javax.swing.JTextField();
        brojStranica_knjiga_Posudba_TextField = new javax.swing.JTextField();
        jScrollPane = new javax.swing.JScrollPane();
        rezultatPretrage_Posudba_JTable = new javax.swing.JTable();
        posudi_Posudba_jButton = new javax.swing.JButton();
        natrag_Posudba_JButton = new javax.swing.JButton();
        trazi_ime_ucenika_jButton = new javax.swing.JButton();
        trazi_prezime_ucenika_jButton = new javax.swing.JButton();
        trazi_razred_ucenika_jButton = new javax.swing.JButton();
        trazi_naziv_knjiga_jButton = new javax.swing.JButton();
        trazi_autor_knjiga_jButton = new javax.swing.JButton();
        trazi_godIzdanja_knjiga_jButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        podnaslov_Posudba_JLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        podnaslov_Posudba_JLabel.setForeground(new java.awt.Color(0, 0, 255));
        podnaslov_Posudba_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        podnaslov_Posudba_JLabel.setText("Knjiga");
        podnaslov_Posudba_JLabel.setToolTipText("");
        podnaslov_Posudba_JLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        podnaslov_Posudba_JLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        naslov_Posudba_JLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        naslov_Posudba_JLabel.setForeground(new java.awt.Color(0, 0, 255));
        naslov_Posudba_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        naslov_Posudba_JLabel.setText("Posudba");
        naslov_Posudba_JLabel.setToolTipText("");
        naslov_Posudba_JLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        naslov_Posudba_JLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        podnaslovDrugi_Posudba_JLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        podnaslovDrugi_Posudba_JLabel.setForeground(new java.awt.Color(0, 0, 255));
        podnaslovDrugi_Posudba_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        podnaslovDrugi_Posudba_JLabel.setText("U훾enik");
        podnaslovDrugi_Posudba_JLabel.setToolTipText("");
        podnaslovDrugi_Posudba_JLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        podnaslovDrugi_Posudba_JLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        ID_knjiga_Posudba_JLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ID_knjiga_Posudba_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ID_knjiga_Posudba_JLabel.setText("ID");

        ID_ucenik_Posudba_JLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ID_ucenik_Posudba_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ID_ucenik_Posudba_JLabel.setText("ID");

        trazi_ucenika_jButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        trazi_ucenika_jButton.setText("Tra탑i");
        trazi_ucenika_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trazi_ucenika_jButtonActionPerformed(evt);
            }
        });

        trazi_knjiga_jButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        trazi_knjiga_jButton.setText("Tra탑i");
        trazi_knjiga_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trazi_knjiga_jButtonActionPerformed(evt);
            }
        });

        ime_ucenik_Posudba_JLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ime_ucenik_Posudba_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ime_ucenik_Posudba_JLabel.setText("Ime");

        prezime_ucenik_Posudba_JLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        prezime_ucenik_Posudba_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        prezime_ucenik_Posudba_JLabel.setText("Prezime");

        razred_ucenik_Posudba_JLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        razred_ucenik_Posudba_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        razred_ucenik_Posudba_JLabel.setText("Razred");

        naziv_knjiga_Posudba_JLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        naziv_knjiga_Posudba_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        naziv_knjiga_Posudba_JLabel.setText("Naziv");

        autor_knjiga_Posudba_JLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        autor_knjiga_Posudba_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        autor_knjiga_Posudba_JLabel.setText("Autor");

        godinaIzdanja_knjiga_Posudba_JLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        godinaIzdanja_knjiga_Posudba_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        godinaIzdanja_knjiga_Posudba_JLabel.setText("Godina izdanja");

        brojStranica_knjiga_Posudba_JLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        brojStranica_knjiga_Posudba_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        brojStranica_knjiga_Posudba_JLabel.setText("Broj stranica");

        brojStranica_knjiga_Posudba_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brojStranica_knjiga_Posudba_TextFieldActionPerformed(evt);
            }
        });

        rezultatPretrage_Posudba_JTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane.setViewportView(rezultatPretrage_Posudba_JTable);

        posudi_Posudba_jButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        posudi_Posudba_jButton.setText("Posudi");
        posudi_Posudba_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                posudi_Posudba_jButtonActionPerformed(evt);
            }
        });

        natrag_Posudba_JButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        natrag_Posudba_JButton.setText("Natrag");
        natrag_Posudba_JButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                natrag_Posudba_JButtonActionPerformed(evt);
            }
        });

        trazi_ime_ucenika_jButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        trazi_ime_ucenika_jButton.setText("Tra탑i");
        trazi_ime_ucenika_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trazi_ime_ucenika_jButtonActionPerformed(evt);
            }
        });

        trazi_prezime_ucenika_jButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        trazi_prezime_ucenika_jButton.setText("Tra탑i");
        trazi_prezime_ucenika_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trazi_prezime_ucenika_jButtonActionPerformed(evt);
            }
        });

        trazi_razred_ucenika_jButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        trazi_razred_ucenika_jButton.setText("Tra탑i");
        trazi_razred_ucenika_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trazi_razred_ucenika_jButtonActionPerformed(evt);
            }
        });

        trazi_naziv_knjiga_jButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        trazi_naziv_knjiga_jButton.setText("Tra탑i");
        trazi_naziv_knjiga_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trazi_naziv_knjiga_jButtonActionPerformed(evt);
            }
        });

        trazi_autor_knjiga_jButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        trazi_autor_knjiga_jButton.setText("Tra탑i");
        trazi_autor_knjiga_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trazi_autor_knjiga_jButtonActionPerformed(evt);
            }
        });

        trazi_godIzdanja_knjiga_jButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        trazi_godIzdanja_knjiga_jButton.setText("Tra탑i");
        trazi_godIzdanja_knjiga_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trazi_godIzdanja_knjiga_jButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(naslov_Posudba_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(posudi_Posudba_jButton, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                            .addComponent(natrag_Posudba_JButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(59, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(podnaslovDrugi_Posudba_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(prezime_ucenik_Posudba_JLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ime_ucenik_Posudba_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(razred_ucenik_Posudba_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ime_ucenik_Posudba_TextField)
                                    .addComponent(prezime_ucenik_Posudba_TextField)
                                    .addComponent(razred_ucenik_Posudba_TextField)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(ID_ucenik_Posudba_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ID_ucenik_Posudba_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(trazi_ime_ucenika_jButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(trazi_ucenika_jButton, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                            .addComponent(trazi_prezime_ucenika_jButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(trazi_razred_ucenika_jButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(podnaslov_Posudba_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(brojStranica_knjiga_Posudba_JLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(godinaIzdanja_knjiga_Posudba_JLabel)
                                    .addComponent(ID_knjiga_Posudba_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(naziv_knjiga_Posudba_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(autor_knjiga_Posudba_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(brojStranica_knjiga_Posudba_TextField)
                            .addComponent(ID_knjiga_Posudba_TextField)
                            .addComponent(naziv_knjiga_Posudba_TextField)
                            .addComponent(autor_knjiga_Posudba_TextField)
                            .addComponent(godinaIzdanja_knjiga_Posudba_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(trazi_knjiga_jButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(trazi_naziv_knjiga_jButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(trazi_autor_knjiga_jButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(trazi_godIzdanja_knjiga_jButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(naslov_Posudba_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(podnaslov_Posudba_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(podnaslovDrugi_Posudba_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ID_knjiga_Posudba_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ID_ucenik_Posudba_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trazi_ucenika_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trazi_knjiga_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ID_knjiga_Posudba_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ID_ucenik_Posudba_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ime_ucenik_Posudba_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ime_ucenik_Posudba_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(naziv_knjiga_Posudba_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(naziv_knjiga_Posudba_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trazi_ime_ucenika_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trazi_naziv_knjiga_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prezime_ucenik_Posudba_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prezime_ucenik_Posudba_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(autor_knjiga_Posudba_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(autor_knjiga_Posudba_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trazi_prezime_ucenika_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trazi_autor_knjiga_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(razred_ucenik_Posudba_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(razred_ucenik_Posudba_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(godinaIzdanja_knjiga_Posudba_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(godinaIzdanja_knjiga_Posudba_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trazi_razred_ucenika_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trazi_godIzdanja_knjiga_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(brojStranica_knjiga_Posudba_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(brojStranica_knjiga_Posudba_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(posudi_Posudba_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(natrag_Posudba_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void trazi_knjiga_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trazi_knjiga_jButtonActionPerformed
        
        setFlag(5);//flag 5 za ID knjige
        String id = ID_knjiga_Posudba_TextField.getText();
        
        //pra탑njenje textFieldova ako se u njima nalazi neki podatak
        naziv_knjiga_Posudba_TextField.setText("");
        autor_knjiga_Posudba_TextField.setText("");
        godinaIzdanja_knjiga_Posudba_TextField.setText("");
        brojStranica_knjiga_Posudba_TextField.setText("");
        
        //pretra탑ivanje da li postoji knjiga u bazi sa upisanim ID-om
        try{
            //SQL upit
            String sql = "SELECT ID_knjiga AS 'ID knjige', naslov_knjiga AS 'Naslov djela', autor_knjiga AS 'Autor djela', godIzdanja_knjiga AS 'Godina izdanja', broj_stranica_knjiga AS 'Broj stranica' FROM knjiga WHERE ID_knjiga = '" + id + "'";
            
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            
            //ako ne postoji takva knjiga, baca se obavijest
            if(!rs.next()){
                JOptionPane.showMessageDialog(null, "Knjiga sa tim ID-om nije prona휃ena!");
            }
            
            rs = pst.executeQuery();
            rezultatPretrage_Posudba_JTable.setModel(DbUtils.resultSetToTableModel(rs));
            
            //Event Listener koji 훾eka da mi kliknemo na odre휃eni podatak u tablici
            rezultatPretrage_Posudba_JTable.getSelectionModel().addListSelectionListener((ListSelectionEvent e) -> {
                int red5 = rezultatPretrage_Posudba_JTable.getSelectedRow();
                
                try{
                    rs = pst.executeQuery();
                    
                    if(red5 != -1 && getFlag() == 5){
                        naziv_knjiga_Posudba_TextField.setText(rs.getString(2));
                        autor_knjiga_Posudba_TextField.setText(rs.getString(3));
                        godinaIzdanja_knjiga_Posudba_TextField.setText(rs.getString(4));
                        brojStranica_knjiga_Posudba_TextField.setText(rs.getString(5));
                        setFlag(0);
                    }
                }catch(SQLException f){            
                    JOptionPane.showMessageDialog(null, f);
                }
            });
            
        }
        catch (SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_trazi_knjiga_jButtonActionPerformed

    private void trazi_ucenika_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trazi_ucenika_jButtonActionPerformed
        
        setFlag(1);//flag je 1 za ID ucenika
        String id = ID_ucenik_Posudba_TextField.getText();
        
        //pra탑njenje textFieldova ako se u njima nalazi neki podatak
        ime_ucenik_Posudba_TextField.setText("");
        prezime_ucenik_Posudba_TextField.setText("");
        razred_ucenik_Posudba_TextField.setText("");
        
        //pretra탑ivanje da li postoji u훾enik u bazi sa upisanim ID-om
        try{
            //SQL upit
            String sql = "SELECT ID_ucenik AS 'ID u훾enika', ime_ucenik AS 'Ime u훾enika', prezime_ucenik AS 'Prezime u훾enika', razred_ucenik AS 'Razred' FROM ucenik WHERE ID_ucenik = '" + id + "'";
            
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            
            //ako ne postoji takav u훾enik, baca se obavijest
            if(!rs.next()){
                JOptionPane.showMessageDialog(null, "U훾enik sa tim ID-om nije prona휃en!");
            }
            
            rs = pst.executeQuery();
            rezultatPretrage_Posudba_JTable.setModel(DbUtils.resultSetToTableModel(rs));
            
            //Event Listener koji 훾eka da mi kliknemo na odre휃eni podatak u tablici
            rezultatPretrage_Posudba_JTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                @Override
                public void valueChanged(ListSelectionEvent e) {
                    
                    int red1 = rezultatPretrage_Posudba_JTable.getSelectedRow();
                                                           
                    try{                      
                        rs = pst.executeQuery();                       
                        
                        if(red1 != -1 && getFlag() == 1){
                            ime_ucenik_Posudba_TextField.setText(rs.getString(2));
                            prezime_ucenik_Posudba_TextField.setText(rs.getString(3));
                            razred_ucenik_Posudba_TextField.setText(rs.getString(4));
                            setFlag(0);
                        }
                    }catch(SQLException f){
                        JOptionPane.showMessageDialog(null, f);
                    }
                }
            });
        }
        catch (SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_trazi_ucenika_jButtonActionPerformed

    private void natrag_Posudba_JButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_natrag_Posudba_JButtonActionPerformed
        setVisible(false);
        new Glavna().setVisible(true);
    }//GEN-LAST:event_natrag_Posudba_JButtonActionPerformed

    private void brojStranica_knjiga_Posudba_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brojStranica_knjiga_Posudba_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_brojStranica_knjiga_Posudba_TextFieldActionPerformed

    private void trazi_ime_ucenika_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trazi_ime_ucenika_jButtonActionPerformed
        
        setFlag(2);//flag je 2 za ime ucenika
        String ime_ucenika = ime_ucenik_Posudba_TextField.getText();
        
        //pra탑njenje textFieldova ako se u njima nalazi neki podatak
        ID_ucenik_Posudba_TextField.setText("");
        prezime_ucenik_Posudba_TextField.setText("");
        razred_ucenik_Posudba_TextField.setText("");
        
        //pretra탑ivanje da li postoji u훾enik u bazi sa takvim imenom
        try{
            //SQL upit
            String sql = "SELECT ID_ucenik AS 'ID u훾enika', ime_ucenik AS 'Ime u훾enika', prezime_ucenik AS 'Prezime u훾enika', razred_ucenik AS 'Razred' FROM ucenik WHERE ime_ucenik = '" + ime_ucenika + "'";
            
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            
            //ako ne postoji takav u훾enik, baca se obavijest
            if(!rs.next()){
                JOptionPane.showMessageDialog(null, "U훾enik/ci sa tim imenom nisu prona휃eni!");
            }
            
            rs = pst.executeQuery();
            rezultatPretrage_Posudba_JTable.setModel(DbUtils.resultSetToTableModel(rs));
            
            //Event Listener koji 훾eka da mi kliknemo na odre휃eni podatak u tablici
            rezultatPretrage_Posudba_JTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                @Override
                public void valueChanged(ListSelectionEvent e) {
                    
                    int red2 = rezultatPretrage_Posudba_JTable.getSelectedRow();
                    
                    try{                      
                        rs = pst.executeQuery();
                        
                        if(red2 != -1 && getFlag() == 2){
                            ID_ucenik_Posudba_TextField.setText(rs.getString(1));
                            prezime_ucenik_Posudba_TextField.setText(rs.getString(3));
                            razred_ucenik_Posudba_TextField.setText(rs.getString(4));
                            setFlag(0);
                        }
                    }catch(SQLException f){
                        JOptionPane.showMessageDialog(null, f);
                    }
                }
            });
        }
        catch (SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_trazi_ime_ucenika_jButtonActionPerformed

    private void trazi_prezime_ucenika_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trazi_prezime_ucenika_jButtonActionPerformed
        
        setFlag(3);//flag je 3 za prezime ucenika
        String prezime_ucenika = prezime_ucenik_Posudba_TextField.getText();
        
        //pra탑njenje textFieldova ako se u njima nalazi neki podatak
        ime_ucenik_Posudba_TextField.setText("");
        ID_ucenik_Posudba_TextField.setText("");
        razred_ucenik_Posudba_TextField.setText("");
        
        //pretra탑ivanje da li postoji u훾enik u bazi sa takvim prezimenom
        try{
            //SQL upit
            String sql = "SELECT ID_ucenik AS 'ID u훾enika', ime_ucenik AS 'Ime u훾enika', prezime_ucenik AS 'Prezime u훾enika', razred_ucenik AS 'Razred' FROM ucenik WHERE prezime_ucenik = '" + prezime_ucenika + "'";
            
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            
            //ako ne postoji takav u훾enik, baca se obavijest
            if(!rs.next()){
                JOptionPane.showMessageDialog(null, "U훾enik/ci sa tim prezimenom nisu prona휃eni!");
            }
            
            rs = pst.executeQuery();
            rezultatPretrage_Posudba_JTable.setModel(DbUtils.resultSetToTableModel(rs));
            
            //Event Listener koji 훾eka da mi kliknemo na odre휃eni podatak u tablici
            rezultatPretrage_Posudba_JTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                @Override
                public void valueChanged(ListSelectionEvent e) {
                    
                    int red3 = rezultatPretrage_Posudba_JTable.getSelectedRow();
                    
                    try{                      
                        rs = pst.executeQuery();
                        
                        if(red3 != -1 && getFlag() == 3){
                            ID_ucenik_Posudba_TextField.setText(rs.getString(1));
                            ime_ucenik_Posudba_TextField.setText(rs.getString(2));
                            razred_ucenik_Posudba_TextField.setText(rs.getString(4));
                            setFlag(0);
                        }
                    }catch(SQLException f){
                        JOptionPane.showMessageDialog(null, f);
                    }
                }
            });
        }
        catch (SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_trazi_prezime_ucenika_jButtonActionPerformed

    private void trazi_razred_ucenika_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trazi_razred_ucenika_jButtonActionPerformed
        
        setFlag(4);//flag je 4 za razred ucenika
        String razred_ucenika = razred_ucenik_Posudba_TextField.getText();
        
        //pra탑njenje textFieldova ako se u njima nalazi neki podatak
        ime_ucenik_Posudba_TextField.setText("");
        prezime_ucenik_Posudba_TextField.setText("");
        ID_ucenik_Posudba_TextField.setText("");
        
        //pretra탑ivanje da li postoji u훾enik u bazi koji ide u taj razred
        try{
            //SQL upit
            String sql = "SELECT ID_ucenik AS 'ID u훾enika', ime_ucenik AS 'Ime u훾enika', prezime_ucenik AS 'Prezime u훾enika', razred_ucenik AS 'Razred' FROM ucenik WHERE razred_ucenik = '" + razred_ucenika + "'";
            
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            
            //ako ne postoji takav u훾enik, baca se obavijest
            if(!rs.next()){
                JOptionPane.showMessageDialog(null, "U훾enik/ci u tom razredu nisu prona휃eni!");
            }
            
            rs = pst.executeQuery();
            rezultatPretrage_Posudba_JTable.setModel(DbUtils.resultSetToTableModel(rs));
            
            //Event Listener koji 훾eka da mi kliknemo na odre휃eni podatak u tablici
            rezultatPretrage_Posudba_JTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                @Override
                public void valueChanged(ListSelectionEvent e) {
                    
                    int red4 = rezultatPretrage_Posudba_JTable.getSelectedRow();
                    
                    try{                      
                        rs = pst.executeQuery();
                        
                        if(red4 != -1 && getFlag() == 4){
                            ID_ucenik_Posudba_TextField.setText(rs.getString(1));
                            ime_ucenik_Posudba_TextField.setText(rs.getString(2));
                            prezime_ucenik_Posudba_TextField.setText(rs.getString(3));
                            setFlag(0);
                        }
                    }catch(SQLException f){
                        JOptionPane.showMessageDialog(null, f);
                    }
                }
            });
        }
        catch (SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_trazi_razred_ucenika_jButtonActionPerformed

    private void trazi_naziv_knjiga_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trazi_naziv_knjiga_jButtonActionPerformed
        
        setFlag(6);//flag 6 za naslov knjige
        String naziv_knjige = naziv_knjiga_Posudba_TextField.getText();
        
        //pra탑njenje textFieldova ako se u njima nalazi neki podatak
        ID_knjiga_Posudba_TextField.setText("");
        autor_knjiga_Posudba_TextField.setText("");
        godinaIzdanja_knjiga_Posudba_TextField.setText("");
        brojStranica_knjiga_Posudba_TextField.setText("");
        
        //pretra탑ivanje da li postoji knjiga u bazi koja ima odre휃eni naziv
        try{
            //SQL upit
            String sql = "SELECT ID_knjiga AS 'ID knjige', naslov_knjiga AS 'Naslov djela', autor_knjiga AS 'Autor djela', godIzdanja_knjiga AS 'Godina izdanja', broj_stranica_knjiga AS 'Broj stranica' FROM knjiga WHERE naslov_knjiga = '" + naziv_knjige + "'";
            
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            
            //ako ne postoji takva knjiga, baca se obavijest
            if(!rs.next()){
                JOptionPane.showMessageDialog(null, "Knjiga sa tim nazivom nije prona휃ena!");
            }
            
            rs = pst.executeQuery();
            rezultatPretrage_Posudba_JTable.setModel(DbUtils.resultSetToTableModel(rs));
            
            //Event Listener koji 훾eka da mi kliknemo na odre휃eni podatak u tablici
            rezultatPretrage_Posudba_JTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                @Override
                public void valueChanged(ListSelectionEvent e) {
                    
                    int red6 = rezultatPretrage_Posudba_JTable.getSelectedRow();
                    
                    try{
                       rs = pst.executeQuery();
                       
                       if(red6 != -1 && getFlag() == 6){
                           ID_knjiga_Posudba_TextField.setText(rs.getString(1));
                           autor_knjiga_Posudba_TextField.setText(rs.getString(3));
                           godinaIzdanja_knjiga_Posudba_TextField.setText(rs.getString(4));
                           brojStranica_knjiga_Posudba_TextField.setText(rs.getString(5));
                           setFlag(0);
                       }
                    }catch(SQLException f){
                        JOptionPane.showMessageDialog(null, f);
                    }
                }            
            });
            
        }
        catch (SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_trazi_naziv_knjiga_jButtonActionPerformed

    private void trazi_autor_knjiga_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trazi_autor_knjiga_jButtonActionPerformed
        
        setFlag(7);//flag 7 za autora knjige
        String autor_knjige = autor_knjiga_Posudba_TextField.getText();
        
        //pra탑njenje textFieldova ako se u njima nalazi neki podatak
        ID_knjiga_Posudba_TextField.setText("");
        naziv_knjiga_Posudba_TextField.setText("");
        godinaIzdanja_knjiga_Posudba_TextField.setText("");
        brojStranica_knjiga_Posudba_TextField.setText("");
        
        //pretra탑ivanje da li postoji knjiga u bazi koja ima odre휃enog autora
        try{
            //SQL upit
            String sql = "SELECT ID_knjiga AS 'ID knjige', naslov_knjiga AS 'Naslov djela', autor_knjiga AS 'Autor djela', godIzdanja_knjiga AS 'Godina izdanja', broj_stranica_knjiga AS 'Broj stranica' FROM knjiga WHERE autor_knjiga = '" + autor_knjige + "'";
            
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            
            //ako ne postoji takva knjiga, baca se obavijest
            if(!rs.next()){
                JOptionPane.showMessageDialog(null, "Knjiga tog autora nije prona휃ena!");
            }
            
            rs = pst.executeQuery();
            rezultatPretrage_Posudba_JTable.setModel(DbUtils.resultSetToTableModel(rs));
            
            //Event Listener koji 훾eka da mi kliknemo na odre휃eni podatak u tablici
            rezultatPretrage_Posudba_JTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                @Override
                public void valueChanged(ListSelectionEvent e) {
                    
                    int red7 = rezultatPretrage_Posudba_JTable.getSelectedRow();
                    
                    try{
                       rs = pst.executeQuery();
                       
                       if(red7 != -1 && getFlag() == 7){
                           ID_knjiga_Posudba_TextField.setText(rs.getString(1));
                           naziv_knjiga_Posudba_TextField.setText(rs.getString(2));
                           godinaIzdanja_knjiga_Posudba_TextField.setText(rs.getString(4));
                           brojStranica_knjiga_Posudba_TextField.setText(rs.getString(5));
                           setFlag(0);
                       }
                    }catch(SQLException f){
                        JOptionPane.showMessageDialog(null, f);
                    }
                }            
            });
            
        }
        catch (SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_trazi_autor_knjiga_jButtonActionPerformed

    private void trazi_godIzdanja_knjiga_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trazi_godIzdanja_knjiga_jButtonActionPerformed
        
        setFlag(8);//flag 8 za godinu izdanja
        String godIzdanja_knjige = godinaIzdanja_knjiga_Posudba_TextField.getText();
        
        //pra탑njenje textFieldova ako se u njima nalazi neki podatak
        ID_knjiga_Posudba_TextField.setText("");
        naziv_knjiga_Posudba_TextField.setText("");
        autor_knjiga_Posudba_TextField.setText("");
        brojStranica_knjiga_Posudba_TextField.setText("");
        
        //pretra탑ivanje da li postoji knjiga u bazi koja ima odre휃enu godinu izdanja
        try{
            //SQL upit
            String sql = "SELECT ID_knjiga AS 'ID knjige', naslov_knjiga AS 'Naslov djela', autor_knjiga AS 'Autor djela', godIzdanja_knjiga AS 'Godina izdanja', broj_stranica_knjiga AS 'Broj stranica' FROM knjiga WHERE godIzdanja_knjiga = '" + godIzdanja_knjige + "'";
            
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            
            if(!rs.next()){
                JOptionPane.showMessageDialog(null, "Knjiga sa tom godinom izdanja nije prona휃ena!");
            }
            
            rs = pst.executeQuery();
            rezultatPretrage_Posudba_JTable.setModel(DbUtils.resultSetToTableModel(rs));
            
            //Event Listener koji 훾eka da mi kliknemo na odre휃eni podatak u tablici
            rezultatPretrage_Posudba_JTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                @Override
                public void valueChanged(ListSelectionEvent e) {
                    
                    int red8 = rezultatPretrage_Posudba_JTable.getSelectedRow();
                    
                    try{
                       rs = pst.executeQuery();
                       
                       if(red8 != -1 && getFlag() == 8){
                           ID_knjiga_Posudba_TextField.setText(rs.getString(1));
                           naziv_knjiga_Posudba_TextField.setText(rs.getString(2));
                           autor_knjiga_Posudba_TextField.setText(rs.getString(3));
                           brojStranica_knjiga_Posudba_TextField.setText(rs.getString(5));
                           setFlag(0);
                       }
                    }catch(SQLException f){
                        JOptionPane.showMessageDialog(null, f);
                    }
                }            
            });
            
        }
        catch (SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_trazi_godIzdanja_knjiga_jButtonActionPerformed

    private void posudi_Posudba_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_posudi_Posudba_jButtonActionPerformed
        
        //instanciranje datuma
        Date date = new Date();
        
        try{
            String sqll = "SELECT MAX(ID_posudba) FROM posudba";
            
            pst = conn.prepareStatement(sqll);
            rs = pst.executeQuery();
            
            int br = rs.getInt(1);
            
            //SQL upit
            String sql = "INSERT INTO posudba (ID_posudba, ucenik_posudba, knjiga_posudba, datum_izdavanja_posudba, datum_povrata_posudba) VALUES (?, ?, ?, ?, ?)";
            
            pst = conn.prepareStatement(sql);
            
            //upisivanje podataka koje smo unjeli u textFieldove u bazu
            pst.setInt(1, br + 1); //ID se pove훶ava za 1 svaki put kad posudimo knjigu (AUTOINCREMENT)
            pst.setString(2, ID_ucenik_Posudba_TextField.getText());
            pst.setString(3, ID_knjiga_Posudba_TextField.getText());
            pst.setString(4, date.toString()); //pretvaranje datuma u straing i upisivanje istog u bazu
            pst.setString(5, null); //null zato 큄to ovo polje za povrat knjige popunjavamo tek kad se knjiga vrati
            
            pst.execute();
            pst.close();
            
            JOptionPane.showMessageDialog(null, "Knjiga posu휃ena!");
            
            conn.close();
        }
        
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
        
        //upisivanje u ucenika da je posudio knjigu
        /*try{
            //SQL upit
            String sql = "SELECT brPosudbi_ucenik FROM ucenik";
            
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            
            int brPosudbi_ucenik = rs.getInt(5);
            
            pst.setInt(5, brPosudbi_ucenik + 1);
            
            pst.execute();
            pst.close();
            conn.close();
        }
        catch(SQLException f){
            JOptionPane.showMessageDialog(null, f);
        }*/
    }//GEN-LAST:event_posudi_Posudba_jButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Posudba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Posudba().setVisible(true);
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ID_knjiga_Posudba_JLabel;
    private javax.swing.JTextField ID_knjiga_Posudba_TextField;
    private javax.swing.JLabel ID_ucenik_Posudba_JLabel;
    private javax.swing.JTextField ID_ucenik_Posudba_TextField;
    private javax.swing.JLabel autor_knjiga_Posudba_JLabel;
    private javax.swing.JTextField autor_knjiga_Posudba_TextField;
    private javax.swing.JLabel brojStranica_knjiga_Posudba_JLabel;
    private javax.swing.JTextField brojStranica_knjiga_Posudba_TextField;
    private javax.swing.JLabel godinaIzdanja_knjiga_Posudba_JLabel;
    private javax.swing.JTextField godinaIzdanja_knjiga_Posudba_TextField;
    private javax.swing.JLabel ime_ucenik_Posudba_JLabel;
    private javax.swing.JTextField ime_ucenik_Posudba_TextField;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JLabel naslov_Posudba_JLabel;
    private javax.swing.JButton natrag_Posudba_JButton;
    private javax.swing.JLabel naziv_knjiga_Posudba_JLabel;
    private javax.swing.JTextField naziv_knjiga_Posudba_TextField;
    private javax.swing.JLabel podnaslovDrugi_Posudba_JLabel;
    private javax.swing.JLabel podnaslov_Posudba_JLabel;
    private javax.swing.JButton posudi_Posudba_jButton;
    private javax.swing.JLabel prezime_ucenik_Posudba_JLabel;
    private javax.swing.JTextField prezime_ucenik_Posudba_TextField;
    private javax.swing.JLabel razred_ucenik_Posudba_JLabel;
    private javax.swing.JTextField razred_ucenik_Posudba_TextField;
    private javax.swing.JTable rezultatPretrage_Posudba_JTable;
    private javax.swing.JButton trazi_autor_knjiga_jButton;
    private javax.swing.JButton trazi_godIzdanja_knjiga_jButton;
    private javax.swing.JButton trazi_ime_ucenika_jButton;
    private javax.swing.JButton trazi_knjiga_jButton;
    private javax.swing.JButton trazi_naziv_knjiga_jButton;
    private javax.swing.JButton trazi_prezime_ucenika_jButton;
    private javax.swing.JButton trazi_razred_ucenika_jButton;
    private javax.swing.JButton trazi_ucenika_jButton;
    // End of variables declaration//GEN-END:variables
}
